services:
  discord-bot:
    build:
      context: .
      dockerfile_inline: |
        FROM ubuntu:24.04
        WORKDIR /app
        RUN apt-get update && apt-get install -y \
            libssl3 \
            ca-certificates \
            && rm -rf /var/lib/apt/lists/*
        COPY ./bin/discord-bot /app/discord-bot
        COPY ./run.sh /app/run.sh
        RUN chmod +x /app/discord-bot
        RUN chmod +x /app/run.sh
        CMD ["./discord-bot"]
    container_name: discord-bot
    volumes:
      - ./.config:/app/.config:rw
      - ./exchange:/app/exchange:rw
      - ./stat:/app/stat:rw
    restart: unless-stopped
    networks:
      - bot-network
    environment:
      DISCORD_TOKEN: $DISCORD_TOKEN
      OVERRIDE_USER_ID: $OVERRIDE_USER_ID
      OVERRIDE_USER_NAME: $OVERRIDE_USER_NAME
      GUILD_ID: $GUILD_ID
      SYSTEM_PROMPT: $SYSTEM_PROMPT
      MODEL_NAME: $MODEL_NAME
      OLLAMA_HOST: $OLLAMA_HOST
      OLLAMA_PORT: $OLLAMA_PORT
      ERROR_OLLAMA_ERROR: $ERROR_OLLAMA_ERROR
      ERROR_NO_MESSAGES: $ERROR_NO_MESSAGES
      TRIGGER_WORDS: $TRIGGER_WORDS
      TABLE_HEADER: $TABLE_HEADER
      TELOXIDE_TOKEN: $TELOXIDE_TOKEN

  telegram-bot:
    build:
      context: .
      dockerfile_inline: |
        FROM ubuntu:24.04
        WORKDIR /app
        RUN apt-get update && apt-get install -y \
            libssl3 \
            ca-certificates \
            && rm -rf /var/lib/apt/lists/*
        COPY ./bin/telegram-bot /app/telegram-bot
        COPY ./run.sh /app/run.sh
        RUN chmod +x /app/telegram-bot
        RUN chmod +x /app/run.sh
        CMD ["./telegram-bot"]
    container_name: telegram-bot
    volumes:
      - ./.config:/app/.config:rw
      - ./exchange:/app/exchange:rw
    restart: unless-stopped
    networks:
      - bot-network
    environment:
      DISCORD_TOKEN: $DISCORD_TOKEN
      OVERRIDE_USER_ID: $OVERRIDE_USER_ID
      OVERRIDE_USER_NAME: $OVERRIDE_USER_NAME
      GUILD_ID: $GUILD_ID
      SYSTEM_PROMPT: $SYSTEM_PROMPT
      MODEL_NAME: $MODEL_NAME
      OLLAMA_HOST: $OLLAMA_HOST
      OLLAMA_PORT: $OLLAMA_PORT
      ERROR_OLLAMA_ERROR: $ERROR_OLLAMA_ERROR
      ERROR_NO_MESSAGES: $ERROR_NO_MESSAGES
      TRIGGER_WORDS: $TRIGGER_WORDS
      TABLE_HEADER: $TABLE_HEADER
      TELOXIDE_TOKEN: $TELOXIDE_TOKEN

  kemono-ingester:
    build:
      context: .
      dockerfile_inline: |
        FROM ubuntu:24.04
        WORKDIR /app
        RUN apt-get update && apt-get install -y \
            libssl3 \
            ca-certificates \
            && rm -rf /var/lib/apt/lists/*
        COPY ./bin/kemono-ingester /app/kemono-ingester
        COPY ./run.sh /app/run.sh
        RUN chmod +x /app/kemono-ingester
        RUN chmod +x /app/run.sh
        CMD ["./kemono-ingester"]
    container_name: kemono-ingester
    volumes:
      - ./.config:/app/.config:rw
      - ./exchange:/app/exchange:rw
    restart: unless-stopped
    networks:
      - bot-network
    environment:
      DISCORD_TOKEN: $DISCORD_TOKEN
      OVERRIDE_USER_ID: $OVERRIDE_USER_ID
      OVERRIDE_USER_NAME: $OVERRIDE_USER_NAME
      GUILD_ID: $GUILD_ID
      SYSTEM_PROMPT: $SYSTEM_PROMPT
      MODEL_NAME: $MODEL_NAME
      OLLAMA_HOST: $OLLAMA_HOST
      OLLAMA_PORT: $OLLAMA_PORT
      ERROR_OLLAMA_ERROR: $ERROR_OLLAMA_ERROR
      ERROR_NO_MESSAGES: $ERROR_NO_MESSAGES
      TRIGGER_WORDS: $TRIGGER_WORDS
      TABLE_HEADER: $TABLE_HEADER
      TELOXIDE_TOKEN: $TELOXIDE_TOKEN

networks:
  bot-network:
    driver: bridge
